{"remainingRequest":"D:\\library_PROJ\\LibraryFullstack\\source\\front-end\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\library_PROJ\\LibraryFullstack\\source\\front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\library_PROJ\\LibraryFullstack\\source\\front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\library_PROJ\\LibraryFullstack\\source\\front-end\\src\\views\\BookDetail.vue?vue&type=template&id=2249fd58&scoped=true&","dependencies":[{"path":"D:\\library_PROJ\\LibraryFullstack\\source\\front-end\\src\\views\\BookDetail.vue","mtime":1658300066831},{"path":"D:\\library_PROJ\\LibraryFullstack\\source\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\library_PROJ\\LibraryFullstack\\source\\front-end\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\library_PROJ\\LibraryFullstack\\source\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\library_PROJ\\LibraryFullstack\\source\\front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}